link: https://leetcode.com/problems/split-array-largest-sum/description/
concept link : https://www.youtube.com/watch?v=YUF3_eBdzsk&ab_channel=NeetCode

class Solution {
    int[] nums;
    public int splitArray(int[] nums, int k) {
        this.nums=nums;
        int low =0,high =0, min = Integer.MAX_VALUE;
        for(int i =0;i<nums.length;i++){
            low = Math.max(low,nums[i]);
            high +=nums[i];
        }
        while(low<=high){
            int mid = (low+high)/2;
            if(chunks(mid,k)){
                min = Math.min(min,mid);
                high=mid-1;
            }
            else low=mid+1;
        }
        return min;
    }
    private boolean chunks(int mid,int k){
        int cuk=0,i=0;
        while(i < nums.length){
            int val =0;
            while(i<nums.length && nums[i]+val<=mid){
                val +=nums[i];
                i++;
            }
            cuk++;
        }
        return cuk<=k;
    }
}