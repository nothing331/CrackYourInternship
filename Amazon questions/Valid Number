link : https://leetcode.com/problems/valid-number/description/
class Solution {
    public boolean isNumber(String s) {
        s = s.trim(); // Remove leading and trailing whitespaces
        boolean hasDigit = false;
        boolean hasE = false;
        boolean hasDot = false;

        for (int i = 0; i < s.length(); i++) {
            char c = s.charAt(i);

            if (Character.isDigit(c)) {
                hasDigit = true;
            } else if (c == 'e' || c == 'E') {
                if (hasE || !hasDigit) {
                    return false;
                }
                hasE = true;
                hasDigit = false; // Reset digit flag for the exponent part
            } else if (c == '.') {
                if (hasDot || hasE) {
                    return false;
                }
                hasDot = true;
            } else if (c == '-' || c == '+') {
                if (i > 0 && s.charAt(i - 1) != 'e' && s.charAt(i - 1) != 'E') {
                    return false;
                }
            } else {
                return false; // Invalid character
            }
        }

        return hasDigit; // Ensure at least one digit is present
    }
}

bunch of if else statement with flags