https://leetcode.com/problems/reverse-linked-list-ii/description/

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode reverseBetween(ListNode head, int left, int right) {
        if (head == null)
            return head;
        
        ListNode dummy = new ListNode(0);
        dummy.next = head;
        ListNode Lp = dummy;
        ListNode cur = head;

        for (int i = 1; i < left; i++) {
            Lp = cur;
            cur = cur.next;
        }

        ListNode prev = null;
        for (int i = 1; i <= right - left + 1; i++) {
            ListNode frw = cur.next;
            cur.next = prev;
            prev = cur;
            cur = frw;
        }

        Lp.next.next = cur; // Change this line to Lp.next = cur;
        Lp.next = prev;

        return dummy.next;
    }
}
